version: "3.5"

services:
  auth_postgres:
    container_name: auth_postgres
    image: "postgres:13"
    env_file:
      - envs/auth/.env
    volumes:
      - $HOME/postgresql/auth_data:/var/lib/postgresql/auth_api_data
    restart: always
    networks:
      - cinema

  auth_redis:
    container_name: auth_redis
    image: redis:7
    env_file:
      - envs/auth/.env
    volumes:
      - $HOME/redis/data:/var/lib/redis/data
    networks:
      - cinema

  auth:
    container_name: auth
    image: ghcr.io/praktikum-projects-team/auth_api:0.1.3
    env_file:
      - envs/auth/.env
    depends_on:
      - auth_redis
      - auth_postgres
    ports:
      - "8000:8000"
    networks:
      - cinema

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    env_file:
      - envs/notification/.env
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - "15672:15672"
    networks:
      - cinema

  notification_postgres:
    container_name: notification_postgres
    image: "postgres:13"
    env_file:
      - envs/notification/.env
    volumes:
      - $HOME/postgresql/notification_data:/var/lib/postgresql/notification_api_data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d notification_db" ]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: always
    networks:
      - cinema

  notification:
    container_name: notification
    build: .
    env_file:
      - envs/notification/.env
    volumes:
      - $HOME/postgresql/notification_data:/var/lib/postgresql/notification_api_data
    depends_on:
      notification_postgres:
        condition: service_healthy
    networks:
      - cinema

  scheduler:
    container_name: scheduler
    build: cron_scheduler
    env_file:
      - cron_scheduler/.env
    depends_on:
      notification_postgres:
        condition: service_healthy
    networks:
      - cinema

  notification_worker:
    container_name: notification_worker
    build: .
    command: python3 notification_worker.py
    env_file:
      - envs/notification/.env
    depends_on:
      notification_postgres:
        condition: service_healthy
    networks:
      - cinema

  mailhog:
    image: mailhog/mailhog
    logging:
      driver: 'none'
    expose:
      - 1025
    ports:
      - 8025:8025
    networks:
      - cinema

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      - notification
    ports:
      - "80:80"
    networks:
      - cinema


networks:
  cinema:
    name: cinema
