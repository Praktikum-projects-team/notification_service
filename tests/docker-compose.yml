version: "3.5"

services:
  auth_postgres:
    container_name: auth_postgres
    image: "postgres:13"
    env_file:
      - .env
    volumes:
      - $HOME/postgresql/auth_data:/var/lib/postgresql/auth_api_data
    restart: always
    ports:
      - "5432:5432"
    networks:
      - cinema

  auth_redis:
    container_name: auth_redis
    image: redis:7
    env_file:
      - .env
    volumes:
      - $HOME/redis/data:/var/lib/redis/data
    ports:
#      - "6379:6379"
      - "6378:6378"
    networks:
      - cinema

  auth:
    container_name: auth
    image: ghcr.io/praktikum-projects-team/auth_api:0.1.3
    env_file:
#      - .env
      - ../envs/auth/.env
    depends_on:
      - auth_redis
      - auth_postgres
    ports:
      - "8000:8000"
    networks:
      - cinema

  notification_postgres:
    container_name: notification_postgres
    image: "postgres:13"
    env_file:
      - .env
    volumes:
      - $HOME/postgresql/notification_data:/var/lib/postgresql/notification_api_data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d notification_db" ]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: always
    ports:
      - "5433:5432"
    networks:
      - cinema

  notification:
    container_name: notification
    build: ..
    env_file:
      - .env
    volumes:
      - $HOME/postgresql/notification_data:/var/lib/postgresql/notification_api_data
    depends_on:
      notification_postgres:
        condition: service_healthy
    networks:
      - cinema

#  nginx:
#    container_name: nginx
#    image: nginx:latest
#    volumes:
#      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#      - ../nginx/configs:/etc/nginx/conf.d:ro
#    ports:
#      - "80:80"

  tests:
    container_name: tests
    build: .
    env_file:
      - .env
    depends_on:
      - notification_postgres
      - notification
    networks:
      - cinema


networks:
  cinema:
    name: cinema
